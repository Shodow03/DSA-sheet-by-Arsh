class Solution {
    public void gameOfLife(int[][] board) {
        int arr[][]=new int[board.length][board[0].length];
		for(int i=0;i<board.length;i++) {
			for(int j=0;j<board[0].length;j++) {
				HashMap<Integer, Integer> map=new HashMap<>();
                map.put(1, 0);
				if(j>0) {
					int val=board[i][j-1];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
                
				if(j<board[0].length-1) {
					int val=board[i][j+1];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
                
				if(i>0) {
					int val=board[i-1][j];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
			
				if(i>0&&j>0) {
					int val=board[i-1][j-1];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
				
				if(i>0&&j<board[0].length-1) {
					int val=board[i-1][j+1];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
			
				if(i<board.length-1) {
					int val=board[i+1][j];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
	
				if(i<board.length-1&&j>0) {
					int val=board[i+1][j-1];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}

				if(i<board.length-1&&j<board[0].length-1) {
					int val=board[i+1][j+1];
					if(map.containsKey(val)) {
						map.put(val,map.get(val)+1);
					}else {
						map.put(val,1);
					}
				}
				
				if(board[i][j]==0 && map.get(1)==3) {
					arr[i][j]=1;
				}
				if(board[i][j]==1) {
					if(map.get(1)==2 || map.get(1)==3) {
						arr[i][j]=1;
					}
				}
				
			}
		}
		
		for(int i=0;i<arr.length;i++) {
			for(int j=0;j<arr[0].length;j++) {
				board[i][j]=arr[i][j];
			}
		}
    }
}
