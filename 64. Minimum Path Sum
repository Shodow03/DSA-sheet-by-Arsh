class Solution {
    public static int minPathSum(int [][]grid,int i,int j,int [][]ar){
      	if(i==grid.length-1&&j==grid[0].length-1) {
			ar[i][j]=grid[i][j];
			return grid[i][j];
		}
		int a=Integer.MAX_VALUE,b=Integer.MAX_VALUE;
		int cur=grid[i][j];
		if(j<grid[0].length-1) {
			if(ar[i][j+1]!=0) a=ar[i][j+1]+cur;
            else a=minPathSum(grid, i, j+1,ar)+cur;
		}
		if(i<grid.length-1) {
			if(ar[i+1][j]!=0) b=ar[i+1][j]+cur;
            else b=minPathSum(grid, i+1, j,ar)+cur;	
		}
        
		int res=Math.min(a, b);
		ar[i][j]=res;
		return res;
    }
    public int minPathSum(int[][] grid) {
        int [][]ar=new int[grid.length][grid[0].length];
        return minPathSum(grid,0,0,ar);
    }
}
